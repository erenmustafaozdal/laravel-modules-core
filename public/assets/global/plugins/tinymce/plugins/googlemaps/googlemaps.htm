<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>{#googlemaps_dlg.dialog_title}</title>

    <script type="text/javascript" src="../../tiny_mce_popup.js?v=307"></script>

    <script type="text/javascript" src="../../utils/mctabs.js"></script>

    <script type="text/javascript" src="js/googlemaps.js"></script>

    <script src="http://maps.googleapis.com/maps/api/js?libraries=places&sensor=false" type="text/javascript"></script>

</head>
<body onload="initialize()">
    <form onsubmit="GoogleMaps.insert();return false;" action="#">
    <div class="tabs">
        <ul>
            <li id="general_tab" class="current"><span><a href="javascript:mcTabs.displayTab('general_tab','general_panel');"
                onmousedown="return false;">{#googlemaps_dlg.tab_general}</a></span></li>
            <li id="advanced_tab"><span><a href="javascript:mcTabs.displayTab('advanced_tab','advanced_panel');"
                onmousedown="return false;">{#googlemaps_dlg.tab_advanced}</a></span></li>
        </ul>
    </div>
    <div id="panel_wrapper" class="panel_wrapper">
        
        <input type="hidden" name="zoom" id="zoom" value="" />
        <input type="hidden" name="mapType" id="mapType" value="" />
        
        
        <div id="general_panel" class="panel current" style="height: 405px;">
            <fieldset>
                <legend>{#googlemaps_dlg.map}</legend>
                <table border="0" cellspacing="0" cellpadding="4">
                    <tr>
                        <td colspan="2">
                            <div id="map_outer" style="width: 450px; height: 250px; overflow: auto;">
                                <div id="map" style="width: 430px; height: 230px; overflow: hidden"></div>
                            </div>                   
                        </td>
                    </tr>
                </table>
            </fieldset>
            <div id="divLookup">
                <fieldset id="fsLookup" style="margin-top: 10px">
                    <legend>{#googlemaps_dlg.position}</legend>
                        <table>
                           <tr>
                                <td style="width:75px;text-align: right;">{#googlemaps_dlg.address}:</td>
                                <td><input style="width: 300px;" id="address" name="address" value="" type="text" autocomplete="off" /></td>
                                <td><input type="button" onclick="codeAddress(document.getElementById('address').value);return false;" style="cursor: pointer !important; width: 55px;" value="{#googlemaps_dlg.search}" /></td>
                           </tr>
                           <tr>
                                <td style="width:75px;text-align: right;">{#googlemaps_dlg.coordinates}:</td>
                                <td><input style="width: 300px;" id="coords" name="coords" type="text" class="text" /></td>
                                <td><input type="button" onclick="setCoords(document.getElementById('coords').value);return false;" style="cursor: pointer !important; width: 55px;" value="{#googlemaps_dlg.change}" /></td>
                           </tr>
                        </table>
                </fieldset>
            </div>
            <div id="divOptions">
                <fieldset id="fsOptions" style="margin-top: 10px">
                    <legend>{#googlemaps_dlg.options}</legend>
                        <table>
                           <tr>
                                <td style="width:75px;text-align: right;">{#googlemaps_dlg.size}:</td>
                                <td style="width:302px;">&nbsp;&nbsp;
                                    {#googlemaps_dlg.width} <input style="width: 50px;" id="width" name="width" type="text" class="text" value="450" />&nbsp;&nbsp;
                                    x &nbsp;&nbsp;{#googlemaps_dlg.height} <input style="width: 50px;" id="height" name="height" type="text" class="text" value="250" /> {#googlemaps_dlg.pixel}
                                </td>
                                <td><input type="button" onclick="setSize(document.getElementById('width').value, document.getElementById('height').value);return false;" style="cursor: pointer !important; width: 55px;" value="{#googlemaps_dlg.change}" /></td>
                           </tr>
                        </table>
                </fieldset>
            </div>            
        </div>
        <div id="advanced_panel" class="panel" style="height: 405px;">
            <fieldset>
                <legend>{#googlemaps_dlg.map_options}</legend>
                <div id="div2" style="position: relative; clear: both; padding: 4px;">
                     <table>
                           <tr>
                                <td style="width:125px;text-align: right;">{#googlemaps_dlg.show_scale}:</td>
                                <td style="width:300px;"><input type="checkbox" id="chkScale" onclick="setScaleControl(this.checked);" /></td>
                           </tr>
                           <tr>
                                <td style="text-align: right;">{#googlemaps_dlg.street_view_activate}:</td>
                                <td><input type="checkbox" id="chkStreetViewControl" onclick="setStreetViewControl(this.checked);" /></td>
                           </tr>
                           <tr>
                                <td style="text-align: right;">{#googlemaps_dlg.zoom_style}:</td>
                                <td></td>
                           </tr>
                           <tr>
                                <td colspan="3" style="text-align: right;">
                                    <select name="controlStyle" id="controlStyle" onchange="setControlStyle(this.value)">
                                             <option value="default" selected="selected">{#googlemaps_dlg.control_style_default}</option>
                                             <option value="small">{#googlemaps_dlg.control_style_small}</option>
                                             <option value="large">{#googlemaps_dlg.control_style_large}</option>
                                    </select>
                                </td>
                           </tr>
                     </table>
                </div>
            </fieldset>
        </div>
    </div>
    <div class="mceActionPanel">
        <div style="float: left">
            <input type="button" id="insert" name="insert" value="{#insert}" onclick="GoogleMaps.insert();" />
        </div>
        <div style="float: right">
            <input type="button" id="cancel" name="cancel" value="{#cancel}" onclick="tinyMCEPopup.close();" />
        </div>
    </div>

    <script type="text/javascript">
		var editMap = false;
        var initialCoords = new Array(0,0);
        var width;
        var height;
        var zoom;
        var controlStyle;
        var showScale;
        var showStreetView;
        var mapType;

        function dialogInit(data, edit) {
        	initialCoords = data.coords.split(",");
        	// Edit existing google maps
        	if(edit === true) {
        		width = data.width;
        		height = data.height;
        		zoom = data.zoom;
        		controlStyle = data.controlStyle;
        		showScale = data.showScale;
        		showStreetView = data.streetViewControl;
        		mapType = data.mapType;
        		editMap = true;        		
        		document.getElementById('coords').value = data.coords;
        	}
        	// Create new google map
        	else {
                document.getElementById('coords').value = data.coords;
                initialCoords = data.coords.split(",");
        	}
        }
        
        var marker;
        var geocoder;
        var map;
        
        function initialize()
        {
          geocoder = new google.maps.Geocoder();
          var myOptions;
       	  var latlng = new google.maps.LatLng(initialCoords[0], initialCoords[1]);
       	  
       	  autocomplete = new google.maps.places.Autocomplete(document.getElementById('address'));
       	  
          if(editMap == false) { 
              myOptions = {
                zoom: 8,
                center: latlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                streetViewControl: false,
                scaleControl: false
              }
          }
          else {
        	  mapTypeId = google.maps.MapTypeId.ROADMAP;
        	  switch (mapType)
			  {
       			case "roadmap": mapTypeId = google.maps.MapTypeId.ROADMAP; break;
       			case "hybrid": mapTypeId = google.maps.MapTypeId.HYBRID; break;
       			case "satellite": mapTypeId = google.maps.MapTypeId.SATELLITE; break;
       			case "terrain": mapTypeId = google.maps.MapTypeId.TERRAIN; break;
       		  }
        	  zoomControlStyle = google.maps.ZoomControlStyle.DEFAULT;
        	  switch (controlStyle) {
        	  	case "default": zoomControlStyle = google.maps.ZoomControlStyle.DEFAULT; document.getElementById("controlStyle").selectedIndex = 0; break;
     			case "small": zoomControlStyle = google.maps.ZoomControlStyle.SMALL; document.getElementById("controlStyle").selectedIndex = 1; break;
     			case "large": zoomControlStyle = google.maps.ZoomControlStyle.LARGE; document.getElementById("controlStyle").selectedIndex = 2; break;
			  }
        	  scaleControl = false;
        	  switch (String(showScale)) {
                case 'true': scaleControl = true;
              	  break;
                case 'false': scaleControl = false;
              	  break;
			  }
        	  streetViewControl = false;
        	  switch (showStreetView) {
                case 'true': streetViewControl = true;
                  break;
                case 'false': streetViewControl = false;
                  break;
			  }
              myOptions = {
                zoom: parseInt(zoom),
                center: latlng,
                mapTypeId: mapTypeId,
                zoomControlOptions: {style: zoomControlStyle},
                streetViewControl: streetViewControl,
                scaleControl: scaleControl
              }        
              if(width!=NaN) {
            	document.getElementById('map').style.width = width + "px";
          		document.getElementById("width").value = width;
              }
              if(height!=NaN) {
            	document.getElementById('map').style.height = height + "px";
              	document.getElementById("height").value = height;
              }
              document.getElementById("chkScale").checked = scaleControl;
              document.getElementById("chkStreetViewControl").checked = streetViewControl;
          }
          
          map = new google.maps.Map(document.getElementById("map"), myOptions);
          map.setCenter(latlng);
   		  marker = new google.maps.Marker({map: map,position: latlng, draggable: true });
          
          document.getElementById('mapType').value = map.getMapTypeId();
          document.getElementById('zoom').value = map.zoom;
   		  
          google.maps.event.addListener(marker, 'drag', function() {      	  
        	  document.getElementById('coords').value = marker.getPosition().lat() + "," + marker.getPosition().lng();
          });          
         
          google.maps.event.addListener(map, 'zoom_changed', function() {
              document.getElementById('zoom').value = map.getZoom();
          });

          google.maps.event.addListener(map, 'maptypeid_changed', function() {
        	  document.getElementById('mapType').value =  map.getMapTypeId();
          });  
          
          google.maps.event.addListener(autocomplete, 'place_changed', function() {
              var place = autocomplete.getPlace();
              marker.setPosition(place.geometry.location);
              document.getElementById('coords').value = place.geometry.location.lat() + "," + place.geometry.location.lng();
              setMarkerInCenter();
          });
          
          setMarkerInCenter();
        }
        
        function setMarkerInCenter()
        {
        	google.maps.event.trigger(map, 'resize')
	       	map.setCenter(marker.getPosition());
        }

        function codeAddress(address)
        {
          if (geocoder && address!="") {
            geocoder.geocode( { 'address': address}, function(results, status) {
              if (status == google.maps.GeocoderStatus.OK) {
                map.setCenter(results[0].geometry.location);
                marker.setPosition(results[0].geometry.location);
                document.getElementById('coords').value = marker.position.lat() + "," + marker.position.lng();
                document.getElementById('address').value = results[0].formatted_address;
              } else {
            	tinyMCEPopup.alert(tinyMCEPopup.getLang('googlemaps_dlg.error_geocoder'));
              }
            });
          }          
        }
        
        function setAddress(location) {
        	if (geocoder) {
        	geocoder.geocode( {'location': location}, function(results, status) {
        		  if (status == google.maps.GeocoderStatus.OK) {
        			  document.getElementById('address').value = results[0].formatted_address;
        		  }
        		  else {
      				tinyMCEPopup.alert(tinyMCEPopup.getLang('googlemaps_dlg.error_geocoder'));
                  }
        	  });
        	}
        }
                
        function setCoords(coords)
        {
        	coords = coords.split(",");
        	if(coords.lenght = 2) {
        		marker.setPosition(new google.maps.LatLng(coords[0], coords[1]))
        	}
        	setMarkerInCenter();
        }
        
        function setSize(width, height)
        {
        	if(width!=NaN) {
        		document.getElementById('map').style.width = width + "px";        		
        	}
        	if(height!=NaN) {
        		document.getElementById('map').style.height = height + "px";        		
        	}        	
        	setMarkerInCenter();
        }
        
        function setScaleControl(scaleControl)
        {
        	map.setOptions({'scaleControl': scaleControl});
        }
        
        function setStreetViewControl(streetViewControl)
        {
        	map.setOptions({'streetViewControl': streetViewControl});
        }
        
        function setControlStyle(controlStyleType)
        { 	
 			switch (controlStyleType)
 			{
 				case "default": styleType = google.maps.ZoomControlStyle.DEFAULT; break;
 				case "large": styleType = google.maps.ZoomControlStyle.LARGE; break;
 				case "small": styleType = google.maps.ZoomControlStyle.SMALL; break;
 				default: styleType = google.maps.ZoomControlStyle.DEFAULT; break;
 			}
        	map.setOptions({'zoomControlOptions': { style: styleType } });
        }
    </script>
    </form>
</body>
</html>
